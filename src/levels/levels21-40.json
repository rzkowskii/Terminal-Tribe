{
  "levels": [
    {
      "id": 21,
      "title": "Eliminating Evidence",
      "story": "We must remove the obsolete 'beta_plan' file to prevent it falling into enemy hands.",
      "task": "Remove the file named beta_plan.",
      "expectedCommand": "rm beta_plan",
      "successMessage": "File erased. Evidence of our previous plan is gone.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "beta_plan": {
            "type": "file",
            "content": "Obsolete plan data",
            "permissions": "-rw-r--r--",
            "owner": "recruit",
            "group": "tribe",
            "size": 1024
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {}
      }
    },
    {
      "id": 22,
      "title": "Complete Eradication",
      "story": "The 'temp_files' directory contains sensitive data that needs to be completely destroyed.",
      "task": "Remove the directory temp_files and all its contents.",
      "expectedCommand": "rm -r temp_files",
      "successMessage": "Directory and all contents removed. No traces remain.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "temp_files": {
            "type": "directory",
            "files": {
              "data1.txt": {
                "type": "file",
                "content": "Sensitive data 1",
                "permissions": "-rw-r--r--",
                "owner": "recruit",
                "group": "tribe",
                "size": 1024
              },
              "data2.txt": {
                "type": "file",
                "content": "Sensitive data 2",
                "permissions": "-rw-r--r--",
                "owner": "recruit",
                "group": "tribe",
                "size": 1024
              }
            },
            "permissions": "drwxr-xr-x",
            "owner": "recruit",
            "group": "tribe"
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {}
      }
    },
    {
      "id": 23,
      "title": "Linking the Chains",
      "story": "For quick access, create a direct link to 'master_file' in your current directory.",
      "task": "Create a hard link to the file master_file.",
      "expectedCommand": "ln master_file master_file_link",
      "successMessage": "Hard link created. 'master_file' is now directly accessible.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "master_file": {
            "type": "file",
            "content": "Master file content",
            "permissions": "-rw-r--r--",
            "owner": "recruit",
            "group": "tribe",
            "size": 1024
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "master_file": {
            "type": "file",
            "content": "Master file content",
            "permissions": "-rw-r--r--",
            "owner": "recruit",
            "group": "tribe",
            "size": 1024
          },
          "master_file_link": {
            "type": "file",
            "content": "Master file content",
            "permissions": "-rw-r--r--",
            "owner": "recruit",
            "group": "tribe",
            "size": 1024
          }
        }
      }
    },
    {
      "id": 24,
      "title": "Symbolic Connection",
      "story": "Set up a symbolic link to 'shared_resources' for easier collaboration.",
      "task": "Create a symbolic link named resources_link pointing to shared_resources.",
      "expectedCommand": "ln -s shared_resources resources_link",
      "successMessage": "Symbolic link established. Resource sharing is now streamlined.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "shared_resources": {
            "type": "directory",
            "files": {
              "resource1.txt": {
                "type": "file",
                "content": "Resource 1",
                "permissions": "-rw-r--r--",
                "owner": "recruit",
                "group": "tribe",
                "size": 1024
              }
            },
            "permissions": "drwxr-xr-x",
            "owner": "recruit",
            "group": "tribe"
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "shared_resources": {
            "type": "directory",
            "files": {
              "resource1.txt": {
                "type": "file",
                "content": "Resource 1",
                "permissions": "-rw-r--r--",
                "owner": "recruit",
                "group": "tribe",
                "size": 1024
              }
            },
            "permissions": "drwxr-xr-x",
            "owner": "recruit",
            "group": "tribe"
          },
          "resources_link": {
            "type": "symlink",
            "target": "shared_resources",
            "permissions": "lrwxrwxrwx",
            "owner": "recruit",
            "group": "tribe"
          }
        }
      }
    },
    {
      "id": 25,
      "title": "Recognizing Links",
      "story": "Verify the nature of 'resources_link' to ensure it's properly linked.",
      "task": "Check the file type of resources_link in a long listing.",
      "expectedCommand": "ls -l",
      "successMessage": "Confirmed! 'resources_link' is a symbolic link.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "shared_resources": {
            "type": "directory",
            "files": {
              "resource1.txt": {
                "type": "file",
                "content": "Resource 1",
                "permissions": "-rw-r--r--",
                "owner": "recruit",
                "group": "tribe",
                "size": 1024
              }
            },
            "permissions": "drwxr-xr-x",
            "owner": "recruit",
            "group": "tribe"
          },
          "resources_link": {
            "type": "symlink",
            "target": "shared_resources",
            "permissions": "lrwxrwxrwx",
            "owner": "recruit",
            "group": "tribe"
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "shared_resources": {
            "type": "directory",
            "files": {
              "resource1.txt": {
                "type": "file",
                "content": "Resource 1",
                "permissions": "-rw-r--r--",
                "owner": "recruit",
                "group": "tribe",
                "size": 1024
              }
            },
            "permissions": "drwxr-xr-x",
            "owner": "recruit",
            "group": "tribe"
          },
          "resources_link": {
            "type": "symlink",
            "target": "shared_resources",
            "permissions": "lrwxrwxrwx",
            "owner": "recruit",
            "group": "tribe"
          }
        }
      }
    },
    {
      "id": 26,
      "title": "Abandoned Shells",
      "story": "An empty directory lingers. Clear the space.",
      "task": "Remove the empty directory old_logs.",
      "expectedCommand": "rmdir old_logs",
      "successMessage": "Structure removed. Space reclaimed.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "old_logs": {
            "type": "directory",
            "files": {}
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {}
      }
    },
    {
      "id": 27,
      "title": "Recursive Purge",
      "story": "Corruption has nested deep. Purge the entire tree.",
      "task": "Remove the cache directory and all its contents.",
      "expectedCommand": "rm -r cache",
      "successMessage": "Complete purge successful. Threat eliminated.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "cache": {
            "type": "directory",
            "files": {
              "a.txt": {
                "type": "file",
                "content": "a"
              }
            }
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {}
      }
    },
    {
      "id": 28,
      "title": "Twin Data",
      "story": "Create a duplicate reference without copying bytes.",
      "task": "Create a hard link named master_copy to master.",
      "expectedCommand": "ln master master_copy",
      "successMessage": "Hard link established. Redundancy achieved.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "master": {
            "type": "file",
            "content": "core"
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "master": {
            "type": "file",
            "content": "core"
          },
          "master_copy": {
            "type": "file",
            "content": "core"
          }
        }
      }
    },
    {
      "id": 29,
      "title": "Soft Path",
      "story": "Point to shared resources without duplication.",
      "task": "Create a symbolic link named shared_link pointing to shared.",
      "expectedCommand": "ln -s shared shared_link",
      "successMessage": "Symbolic link created. Reference established.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "shared": {
            "type": "directory",
            "files": {}
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "shared": {
            "type": "directory",
            "files": {}
          },
          "shared_link": {
            "type": "symlink",
            "target": "shared",
            "permissions": "lrwxrwxrwx",
            "owner": "recruit",
            "group": "tribe"
          }
        }
      }
    },
    {
      "id": 30,
      "title": "Forced Removal",
      "story": "A stubborn file resists cleanup. Force its deletion.",
      "task": "Force-remove lock.bin.",
      "expectedCommand": "rm -f lock.bin",
      "successMessage": "Forced removal complete. Protection bypassed.",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "lock.bin": {
            "type": "file",
            "content": "x"
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {}
      }
    },

    {
      "id": 31,
      "title": "First Lines",
      "story": "Iris: Read the brief; start at the top.",
      "task": "Show the first 3 lines of briefing.txt.",
      "expectedCommand": "head -n 3 briefing.txt",
      "successMessage": "Top lines revealed.",
      "hint": "head -n N file",
      "conceptKeys": ["text-io"],
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "briefing.txt": { "type": "file", "content": "L1\nL2\nL3\nL4\n" }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "briefing.txt": { "type": "file", "content": "L1\nL2\nL3\nL4\n" }
        }
      }
    },
    {
      "id": 32,
      "title": "Last Lines",
      "story": "Iris: Check the most recent events.",
      "task": "Show the last 2 lines of briefing.txt.",
      "expectedCommand": "tail -n 2 briefing.txt",
      "successMessage": "Tail lines displayed.",
      "hint": "tail -n N file",
      "conceptKeys": ["text-io"],
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "briefing.txt": { "type": "file", "content": "L1\nL2\nL3\nL4\n" }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "briefing.txt": { "type": "file", "content": "L1\nL2\nL3\nL4\n" }
        }
      }
    },
    {
      "id": 33,
      "title": "Line Count",
      "story": "Iris: How long is the report?",
      "task": "Print the number of lines in report.txt.",
      "expectedCommand": "wc -l report.txt",
      "successMessage": "Lines counted.",
      "hint": "wc -l file",
      "conceptKeys": ["text-io"],
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "report.txt": { "type": "file", "content": "a\nb\nc\n" }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "report.txt": { "type": "file", "content": "a\nb\nc\n" }
        }
      }
    },
    {
      "id": 34,
      "title": "Filter Errors",
      "story": "Iris: Pull only the error lines.",
      "task": "Print lines containing 'error' from app.log (case-insensitive).",
      "expectedCommand": "grep -i error app.log",
      "successMessage": "Errors isolated.",
      "hint": "grep -i pattern file",
      "conceptKeys": ["search", "regex"],
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "app.log": { "type": "file", "content": "Info ok\nERROR bad\nwarn maybe\nError again\n" }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "app.log": { "type": "file", "content": "Info ok\nERROR bad\nwarn maybe\nError again\n" }
        }
      }
    },
    {
      "id": 35,
      "title": "Extract Columns",
      "story": "Iris: Names and IDs only.",
      "task": "Print the 1st and 3rd CSV fields from users.csv.",
      "expectedCommand": "cut -d , -f 1,3 users.csv",
      "successMessage": "Columns extracted.",
      "hint": "cut -d , -f 1,3 file",
      "conceptKeys": ["text-io"],
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "users.csv": { "type": "file", "content": "alice,admin,100\nbob,user,200\n" }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "users.csv": { "type": "file", "content": "alice,admin,100\nbob,user,200\n" }
        }
      }
    },
    {
      "id": 36,
      "title": "Sort Numbers",
      "story": "Iris: Order reveals patterns.",
      "task": "Sort nums.txt numerically ascending.",
      "expectedCommand": "sort -n nums.txt",
      "successMessage": "Numbers sorted.",
      "hint": "sort -n file",
      "conceptKeys": ["text-io"],
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "nums.txt": { "type": "file", "content": "10\n2\n11\n" }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "nums.txt": { "type": "file", "content": "10\n2\n11\n" }
        }
      }
    },

    {
      "id": 37,
      "title": "Duplicate Intel",
      "story": "Iris: Make a safe copy—next, we'll read and analyze it.",
      "task": "Copy data.txt to backup.txt.",
      "expectedCommand": "cp data.txt backup.txt",
      "successMessage": "Data copied. Redundancy established.",
      "hint": "cp source destination",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "data.txt": {
            "type": "file",
            "content": "intel"
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "data.txt": {
            "type": "file",
            "content": "intel"
          },
          "backup.txt": {
            "type": "file",
            "content": "intel"
          }
        }
      }
    },
    {
      "id": 38,
      "title": "Tree Copy",
      "story": "Iris: Preserve structure; we'll parse its contents soon.",
      "task": "Copy source_dir to backup_dir recursively.",
      "expectedCommand": "cp -r source_dir backup_dir",
      "successMessage": "Tree duplicated. Full backup complete.",
      "hint": "cp -r dir1 dir2",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "source_dir": {
            "type": "directory",
            "files": {
              "file1": {
                "type": "file",
                "content": "x"
              }
            }
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "source_dir": {
            "type": "directory",
            "files": {
              "file1": {
                "type": "file",
                "content": "x"
              }
            }
          },
          "backup_dir": {
            "type": "directory",
            "files": {
              "file1": {
                "type": "file",
                "content": "x"
              }
            }
          }
        }
      }
    },
    {
      "id": 39,
      "title": "Rename Protocol",
      "story": "Iris: Clear names make logs easier to read next act.",
      "task": "Rename old.log to new.log.",
      "expectedCommand": "mv old.log new.log",
      "successMessage": "Renamed successfully. Identity changed.",
      "hint": "mv source target",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "old.log": {
            "type": "file",
            "content": "logs"
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "new.log": {
            "type": "file",
            "content": "logs"
          }
        }
      }
    },
    {
      "id": 40,
      "title": "Relocation",
      "story": "Iris: Put logs in place—we'll grep and sort them soon.",
      "task": "Move new.log into logs/new.log.",
      "expectedCommand": "mv new.log logs/new.log",
      "successMessage": "Data moved. Resources optimized.",
      "hint": "mv file dir/file",
      "initialState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "new.log": {
            "type": "file",
            "content": "logs"
          },
          "logs": {
            "type": "directory",
            "files": {}
          }
        }
      },
      "expectedState": {
        "currentDirectory": "/home/recruit",
        "files": {
          "logs": {
            "type": "directory",
            "files": {
              "new.log": {
                "type": "file",
                "content": "logs"
              }
            }
          }
        }
      }
    }
  ]
}
